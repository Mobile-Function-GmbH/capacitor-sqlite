{"version":3,"file":"plugin.cjs.js","sources":["esm/definitions.js","esm/index.js","esm/web.js"],"sourcesContent":["/**\r\n * SQLiteConnection Class\r\n */\r\nexport class SQLiteConnection {\r\n    constructor(sqlite) {\r\n        this.sqlite = sqlite;\r\n        this._connectionDict = new Map();\r\n    }\r\n    async echo(value) {\r\n        try {\r\n            const res = await this.sqlite.echo({ value });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isSecretStored() {\r\n        try {\r\n            const res = await this.sqlite.isSecretStored();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async setEncryptionSecret(passphrase) {\r\n        try {\r\n            await this.sqlite.setEncryptionSecret({ passphrase: passphrase });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async changeEncryptionSecret(passphrase, oldpassphrase) {\r\n        try {\r\n            await this.sqlite.changeEncryptionSecret({\r\n                passphrase: passphrase,\r\n                oldpassphrase: oldpassphrase,\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async addUpgradeStatement(database, fromVersion, toVersion, statement, set) {\r\n        const upgrade = {\r\n            fromVersion,\r\n            toVersion,\r\n            statement,\r\n            set: set ? set : [],\r\n        };\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.addUpgradeStatement({\r\n                database,\r\n                upgrade: [upgrade],\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async createConnection(database, encrypted, mode, version) {\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.createConnection({\r\n                database,\r\n                encrypted,\r\n                mode,\r\n                version,\r\n            });\r\n            const conn = new SQLiteDBConnection(database, this.sqlite);\r\n            this._connectionDict.set(database, conn);\r\n            return Promise.resolve(conn);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async closeConnection(database) {\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.closeConnection({ database });\r\n            this._connectionDict.delete(database);\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isConnection(database) {\r\n        const res = {};\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        res.result = this._connectionDict.has(database);\r\n        return Promise.resolve(res);\r\n    }\r\n    async retrieveConnection(database) {\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        if (this._connectionDict.has(database)) {\r\n            const conn = this._connectionDict.get(database);\r\n            if (typeof conn != 'undefined')\r\n                return Promise.resolve(conn);\r\n            else {\r\n                return Promise.reject(`Connection ${database} is undefined`);\r\n            }\r\n        }\r\n        else {\r\n            return Promise.reject(`Connection ${database} does not exist`);\r\n        }\r\n    }\r\n    async retrieveAllConnections() {\r\n        return this._connectionDict;\r\n    }\r\n    async closeAllConnections() {\r\n        const delDict = new Map();\r\n        try {\r\n            for (const database of this._connectionDict.keys()) {\r\n                await this.sqlite.closeConnection({ database });\r\n                delDict.set(database, null);\r\n            }\r\n            for (const database of delDict.keys()) {\r\n                this._connectionDict.delete(database);\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async checkConnectionsConsistency() {\r\n        try {\r\n            const keys = [...this._connectionDict.keys()];\r\n            const res = await this.sqlite.checkConnectionsConsistency({ dbNames: keys });\r\n            if (!res.result)\r\n                this._connectionDict = new Map();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            this._connectionDict = new Map();\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async importFromJson(jsonstring) {\r\n        try {\r\n            const ret = await this.sqlite.importFromJson({ jsonstring: jsonstring });\r\n            return Promise.resolve(ret);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isJsonValid(jsonstring) {\r\n        try {\r\n            const ret = await this.sqlite.isJsonValid({ jsonstring: jsonstring });\r\n            return Promise.resolve(ret);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async copyFromAssets(overwrite) {\r\n        const mOverwrite = overwrite != null ? overwrite : true;\r\n        try {\r\n            await this.sqlite.copyFromAssets({ overwrite: mOverwrite });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isDatabase(database) {\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        try {\r\n            const res = await this.sqlite.isDatabase({ database: database });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getDatabaseList() {\r\n        try {\r\n            const res = await this.sqlite.getDatabaseList();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\n/**\r\n * SQLiteDBConnection Class\r\n */\r\nexport class SQLiteDBConnection {\r\n    constructor(dbName, sqlite) {\r\n        this.dbName = dbName;\r\n        this.sqlite = sqlite;\r\n    }\r\n    getConnectionDBName() {\r\n        return this.dbName;\r\n    }\r\n    async open() {\r\n        try {\r\n            await this.sqlite.open({ database: this.dbName });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async close() {\r\n        try {\r\n            await this.sqlite.close({ database: this.dbName });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getVersion() {\r\n        try {\r\n            const version = await this.sqlite.getVersion({\r\n                database: this.dbName,\r\n            });\r\n            return Promise.resolve(version);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async execute(statements, transaction = true) {\r\n        try {\r\n            const res = await this.sqlite.execute({\r\n                database: this.dbName,\r\n                statements: statements,\r\n                transaction: transaction,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async query(statement, values) {\r\n        let res;\r\n        try {\r\n            if (values && values.length > 0) {\r\n                res = await this.sqlite.query({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: values,\r\n                });\r\n            }\r\n            else {\r\n                res = await this.sqlite.query({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: [],\r\n                });\r\n            }\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async run(statement, values, transaction = true) {\r\n        let res;\r\n        try {\r\n            if (values && values.length > 0) {\r\n                res = await this.sqlite.run({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: values,\r\n                    transaction: transaction,\r\n                });\r\n                //        }\r\n            }\r\n            else {\r\n                res = await this.sqlite.run({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: [],\r\n                    transaction: transaction,\r\n                });\r\n            }\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async executeSet(set, transaction = true) {\r\n        try {\r\n            const res = await this.sqlite.executeSet({\r\n                database: this.dbName,\r\n                set: set,\r\n                transaction: transaction,\r\n            });\r\n            //      }\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isExists() {\r\n        try {\r\n            const res = await this.sqlite.isDBExists({\r\n                database: this.dbName,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isTable(table) {\r\n        try {\r\n            const res = await this.sqlite.isTableExists({\r\n                database: this.dbName,\r\n                table: table,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isDBOpen() {\r\n        try {\r\n            const res = await this.sqlite.isDBOpen({\r\n                database: this.dbName,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async delete() {\r\n        try {\r\n            await this.sqlite.deleteDatabase({ database: this.dbName });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async createSyncTable() {\r\n        try {\r\n            const res = await this.sqlite.createSyncTable({\r\n                database: this.dbName,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async setSyncDate(syncdate) {\r\n        try {\r\n            await this.sqlite.setSyncDate({\r\n                database: this.dbName,\r\n                syncdate: syncdate,\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getSyncDate() {\r\n        try {\r\n            const res = await this.sqlite.getSyncDate({\r\n                database: this.dbName,\r\n            });\r\n            let retDate = '';\r\n            if (res.syncDate > 0)\r\n                retDate = new Date(res.syncDate * 1000).toISOString();\r\n            return Promise.resolve(retDate);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async exportToJson(mode) {\r\n        try {\r\n            const res = await this.sqlite.exportToJson({\r\n                database: this.dbName,\r\n                jsonexportmode: mode,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nconst CapacitorSQLite = registerPlugin('CapacitorSQLite', {\r\n    web: () => import('./web').then(m => new m.CapacitorSQLiteWeb()),\r\n});\r\nexport { CapacitorSQLite };\r\nexport * from './definitions';\r\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\r\nexport class CapacitorSQLiteWeb extends WebPlugin {\r\n    async echo(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isSecretStored() {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async setEncryptionSecret(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async changeEncryptionSecret(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async createConnection(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async open(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async closeConnection(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async getVersion(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async checkConnectionsConsistency(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async close(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async execute(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async executeSet(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async run(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async query(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isDBExists(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isDBOpen(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isDatabase(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isTableExists(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async deleteDatabase(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async isJsonValid(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async importFromJson(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async exportToJson(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async createSyncTable(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async setSyncDate(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async getSyncDate(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async addUpgradeStatement(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async copyFromAssets(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async getDatabaseList() {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async getMigratableDbList(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async addSQLiteSuffix(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n    async deleteOldDatabases(_options) {\r\n        throw new Error('Web platform is not supported.');\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}